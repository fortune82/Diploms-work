{"version":3,"sources":["catalog.js"],"names":["newItemsClock","document","querySelector","btnChoose","chooseInp","querySelectorAll","sortChooseButtonMin","sortChooseButtonMax","window","onload","async","response","fetch","clock","json","insertAfter","elem","refElem","parentNode","insertBefore","nextSibling","forEach","innerHTML","price","image","model","onclick","style","backgroundColor","color","index","checked","manClock","id","filter","e","sortType","i","children","length","j","getAttribute","replaceChild","sortList","sortListDesc","fetchData"],"mappings":"AAAA,IAAAA,cAAAC,SAAAC,cAAA,oBACAC,UAAAF,SAAAC,cAAA,sBACAE,WAAAH,SAAAI,iBAAA,kCACAC,oBAAAL,SAAAC,cAAA,YACAK,oBAAAN,SAAAC,cAAA,YAyQAM,OAAAC,OAAA,KAEAC,WACA,MACAC,QAAAC,MADA,iCAEAC,QAAAF,EAAAG,OA6FA,SAAAC,EAAAC,EAAAC,GACA,OAAAA,EAAAC,WAAAC,aAAAH,EAAAC,EAAAG,aA3FAP,EAAAQ,SAAA,SAAAL,GACAhB,cAAAsB,WAAA,6DACAN,EAAAO,mDAEAP,EAAAQ,sCAEAR,EAAAS,qBACAT,EAAAO,+BAMApB,UAAAuB,QAAA,KACA1B,cAAAsB,UAAA,GACAf,oBAAAoB,MAAAC,gBAAA,cACArB,oBAAAoB,MAAAE,MAAA,OACAvB,oBAAAqB,MAAAC,gBAAA,cACAtB,oBAAAqB,MAAAE,MAAA,OACAzB,UAAAiB,SAAA,SAAAL,EAAAc,GACA,GAAAd,EAAAe,QAAA,CACA,IAAAC,EAAAhB,EAAAiB,GACApB,EAAAqB,QAAA,SAAAC,GACA,OAAAA,EAAAF,KAAAD,KAGAX,QAAAc,IACAnC,cAAAsB,WAAA,qEACAa,EAAAZ,mEAEAY,EAAAX,sDAEAW,EAAAV,6BACAU,EAAAZ,4DAaAjB,oBAAAoB,QAAA,YAQA,SAAAU,GACA,IAAA,IAAAC,EAAA,EAAAA,EAAArC,cAAAsC,SAAAC,OAAA,EAAAF,IACA,IAAA,IAAAG,EAAAH,EAAAG,EAAAxC,cAAAsC,SAAAC,OAAAC,IACA,IAAAxC,cAAAsC,SAAAD,GAAAI,aAAAL,IAAApC,cAAAsC,SAAAE,GAAAC,aAAAL,GAAA,CAEArB,EADAf,cAAA0C,aAAA1C,cAAAsC,SAAAE,GAAAxC,cAAAsC,SAAAD,IACArC,cAAAsC,SAAAD,KAZAM,CAAA,cACArC,oBAAAqB,MAAAC,gBAAA,QACAtB,oBAAAqB,MAAAE,MAAA,OACAtB,oBAAAoB,MAAAC,gBAAA,cACArB,oBAAAoB,MAAAE,MAAA,QAgBAtB,oBAAAmB,QAAA,YASA,SAAAU,GACA,IAAA,IAAAC,EAAA,EAAAA,EAAArC,cAAAsC,SAAAC,OAAA,EAAAF,IACA,IAAA,IAAAG,EAAAH,EAAAG,EAAAxC,cAAAsC,SAAAC,OAAAC,IACA,IAAAxC,cAAAsC,SAAAD,GAAAI,aAAAL,IAAApC,cAAAsC,SAAAE,GAAAC,aAAAL,GAAA,CAEArB,EADAf,cAAA0C,aAAA1C,cAAAsC,SAAAE,GAAAxC,cAAAsC,SAAAD,IACArC,cAAAsC,SAAAD,KAbAO,CAAA,cAEArC,oBAAAoB,MAAAC,gBAAA,QACArB,oBAAAoB,MAAAE,MAAA,OACAvB,oBAAAqB,MAAAC,gBAAA,cACAtB,oBAAAqB,MAAAE,MAAA,SAsBAgB","file":"../bem-blocks/bem.js","sourcesContent":["let newItemsClock = document.querySelector('.newItems__clock');\nlet btnChoose = document.querySelector('.choose button');\nlet [...chooseInp] = document.querySelectorAll('.choose input[type=\"checkbox\"]');\nlet sortChooseButtonMin = document.querySelector('.sortMin');\nlet sortChooseButtonMax = document.querySelector('.sortMax');\n\n// let clock = [{\n//         id: '#womanClock',\n//         category: \"woman\",\n//         model: \"woman-1\",\n//         image: \"img/woman/woman-1.jpg\",\n//         price: 165000\n//     },\n//     {\n//         id: '#womanClock',\n//         category: \"woman\",\n//         model: \"woman-2\",\n//         image: \"img/woman/woman-2.jpg\",\n//         price: 5000\n//     },\n//     {\n//         id: '#womanClock',\n//         category: \"woman\",\n//         model: \"woman-3\",\n//         image: \"img/woman/woman-3.jpg\",\n//         price: 965000\n//     },\n//     {\n//         id: '#womanClock',\n//         category: \"woman\",\n//         model: \"woman-4\",\n//         image: \"img/woman/woman-4.jpg\",\n//         price: 46500\n//     },\n//     {\n//         id: '#womanClock',\n//         category: \"woman\",\n//         model: \"woman-5\",\n//         image: \"img/woman/woman-5.jpg\",\n//         price: 225000\n//     },\n//     {\n//         id: '#womanClock',\n//         category: \"woman\",\n//         model: \"woman-6\",\n//         image: \"img/woman/woman-6.jpg\",\n//         price: 65000\n//     },\n//     {\n//         id: '#womanClock',\n//         category: \"woman\",\n//         model: \"woman-7\",\n//         image: \"img/woman/woman-7.jpg\",\n//         price: 36500\n//     },\n//     {\n//         id: '#womanClock',\n//         category: \"woman\",\n//         model: \"woman-8\",\n//         image: \"img/woman/woman-8.jpg\",\n//         price: 765000\n//     },\n//     {\n//         id: '#womanClock',\n//         category: \"woman\",\n//         model: \"woman-9\",\n//         image: \"img/woman/woman-9.jpg\",\n//         price: 11000\n//     },\n//     {\n//         id: '#womanClock',\n//         category: \"woman\",\n//         model: \"woman-10\",\n//         image: \"img/woman/woman-10.jpg\",\n//         price: 225000\n//     },\n//     {\n//         id: '#womanClock',\n//         category: \"woman\",\n//         model: \"woman-11\",\n//         image: \"img/woman/woman-11.jpg\",\n//         price: 73000\n//     },\n//     {\n//         id: '#womanClock',\n//         category: \"woman\",\n//         model: \"woman-12\",\n//         image: \"img/woman/woman-12.jpg\",\n//         price: 21001\n//     },\n//     {\n//         id: '#womanClock',\n//         category: \"woman\",\n//         model: \"woman-13\",\n//         image: \"img/woman/woman-13.jpg\",\n//         price: 21001\n//     },\n//     {\n//         id: '#manClock',\n//         category: \"man\",\n//         model: \"man-1\",\n//         image: \"img/man/man-1.jpg\",\n//         price: 11044\n//     },\n//     {\n//         id: '#manClock',\n//         category: \"man\",\n//         model: \"man-2\",\n//         image: \"img/man/man-2.jpg\",\n//         price: 23500\n//     },\n//     {\n//         id: '#manClock',\n//         category: \"man\",\n//         model: \"man-3\",\n//         image: \"img/man/man-3.jpg\",\n//         price: 225200\n//     },\n//     {\n//         id: '#manClock',\n//         category: \"man\",\n//         model: \"man-4\",\n//         image: \"img/man/man-4.jpg\",\n//         price: 25000\n//     },\n//     {\n//         id: '#manClock',\n//         category: \"man\",\n//         model: \"man-5\",\n//         image: \"img/man/man-5.jpg\",\n//         price: 35000\n//     },\n//     {\n//         id: '#manClock',\n//         category: \"man\",\n//         model: \"man-6\",\n//         image: \"img/man/man-6.jpg\",\n//         price: 3000\n//     },\n//     {\n//         id: '#manClock',\n//         category: \"man\",\n//         model: \"man-7\",\n//         image: \"img/man/man-7.jpg\",\n//         price: 334000\n//     },\n//     {\n//         id: '#manClock',\n//         category: \"man\",\n//         model: \"man-8\",\n//         image: \"img/man/man-8.jpg\",\n//         price: 400\n//     },\n//     {\n//         id: '#manClock',\n//         category: \"man\",\n//         model: \"man-9\",\n//         image: \"img/man/man-9.jpg\",\n//         price: 5000\n//     },\n//     {\n//         id: '#manClock',\n//         category: \"man\",\n//         model: \"man-10\",\n//         image: \"img/man/man-10.jpg\",\n//         price: 225000\n//     },\n//     {\n//         id: '#manClock',\n//         category: \"man\",\n//         model: \"man-11\",\n//         image: \"img/man/man-11.jpg\",\n//         price: 3465000\n//     },\n//     {\n//         id: '#manClock',\n//         category: \"man\",\n//         model: \"man-12\",\n//         image: \"img/man/man-12.jpg\",\n//         price: 2365000\n//     },\n//     {\n//         id: \"#childrenClock\",\n//         category: \"children\",\n//         model: \"children-1\",\n//         image: \"img/children/children-1.jpg\",\n//         price: 1000\n//     },\n//     {\n//         id: \"#childrenClock\",\n//         category: \"children\",\n//         model: \"children-2\",\n//         image: \"img/children/children-2.jpg\",\n//         price: 300\n//     },\n//     {\n//         id: \"#childrenClock\",\n//         category: \"children\",\n//         model: \"children-3\",\n//         image: \"img/children/children-3.jpg\",\n//         price: 25000\n//     },\n//     {\n//         id: \"#childrenClock\",\n//         category: \"children\",\n//         model: \"children-4\",\n//         image: \"img/children/children-4.jpg\",\n//         price: 200\n//     },\n//     {\n//         id: \"#childrenClock\",\n//         category: \"children\",\n//         model: \"children-5\",\n//         image: \"img/children/children-5.jpg\",\n//         price: 2200\n//     },\n//     {\n//         id: \"#childrenClock\",\n//         category: \"children\",\n//         model: \"children-6\",\n//         image: \"img/children/children-6.jpg\",\n//         price: 100\n//     },\n//     {\n//         id: \"#childrenClock\",\n//         category: \"children\",\n//         model: \"children-7\",\n//         image: \"img/children/children-7.jpg\",\n//         price: 200\n//     },\n//     {\n//         id: \"#childrenClock\",\n//         category: \"children\",\n//         model: \"children-8\",\n//         image: \"img/children/children-8.jpg\",\n//         price: 300\n//     },\n//     {\n//         id: \"#childrenClock\",\n//         category: \"children\",\n//         model: \"children-9\",\n//         image: \"img/children/children-9.jpg\",\n//         price: 400\n//     },\n//     {\n//         id: \"#childrenClock\",\n//         category: \"children\",\n//         model: \"children-10\",\n//         image: \"img/children/children-10.jpg\",\n//         price: 1000\n//     },\n//     {\n//         id: \"#childrenClock\",\n//         category: \"children\",\n//         model: \"children-11\",\n//         image: \"img/children/children-11.jpg\",\n//         price: 5000\n//     },\n\n\n\n\n// ]\n\n\n//----------------------------------Запрос на серевер и вызгрузка  товара в секцию \"Каталог часов\"-------------------------\n\n\n\nwindow.onload = () => { // При загрузке страницы  запускается функция\n\n    const fetchData = async () => { //async  - функция всегда возвращает Promise (специальный объект, который содержит своё состояние. Вначале pending («ожидание»), затем – одно из: fulfilled («выполнено успешно») или rejected («выполнено с ошибкой»)). \n        const url = `http://127.0.0.1:3001/catalog` // создаем переменную, в которую передаем url для отправки запроса (см. ниже метод fetch())\n        const response = await fetch(url) // Создаем переменую в которую передаем наши сетевые запросы на сервер (Mackoon) (для скачивания содержимого по адресу url). Метод fetch()делает сетевые запросы и получает информацию с сервера Оператор await используется для ожидания окончания Promise \n        const clock = await response.json() // Создаем переменную в которую передаем полученный ответ в формате json  (декодирует ответ в формате JSON)\n\n        // ------------------Выводим весь массив часов\n        clock.forEach(function (elem) {\n            newItemsClock.innerHTML += ` \n    <div class=\"season__clock-description\" data-price=\"${elem.price}\">\n    <div class=\"clock\">\n    <img src=\"${elem.image}\" alt=\"\">\n    </div>\n    <p>${elem.model}</p>\n    <p>${elem.price}</p>\n</div>  \n    `\n        })\n\n        // ------------------Проводим фильтрацию в зависимости от выбранной категории\n        btnChoose.onclick = () => {\n            newItemsClock.innerHTML = \"\"; // очищаем страницу вывода, чтоб не накапливались карточки с часами\n            sortChooseButtonMax.style.backgroundColor = 'transparent'; // убираем стили с кнопок сортировка товара, если они включены\n            sortChooseButtonMax.style.color = '#fff';\n            sortChooseButtonMin.style.backgroundColor = 'transparent';\n            sortChooseButtonMin.style.color = '#fff';\n            chooseInp.forEach(function (elem, index) {\n                if (elem.checked) {\n                    let manClock = elem.id; // получаем id выбранного checkboxa, чтоб его подставить для фильтрамвыводимых товаров\n                    let clockChoose = clock.filter(function (e) {\n                        return e.id === manClock // сравниваем и возвращаем только совпадения выбраного (отмеченного) checkboxa и id массива clock\n                    })\n                    //перебираем массив с выбранной категорией часов и выводим их в html\n                    clockChoose.forEach((e) => {\n                        newItemsClock.innerHTML += ` \n            <div class=\"season__clock-description\" data-price=\"${e.price}\">\n            <div class=\"clock\">\n            <img src=\"${e.image}\" alt=\"\">\n            </div>\n            <p>${e.model}</p>\n            <p>${e.price} руб.</p>\n            </div>  \n            `\n                    })\n                }\n            })\n        }\n\n\n        // -------------------Сортировка по цене---------------------\n\n        //При нажатии кнопки сортировки по возрастанию вызываем функцию, где вызываем функцию sortList, \n        // куда передаем дата атрибут с нашей ценой('data-price')\n        sortChooseButtonMin.onclick = function () {\n            sortList('data-price');\n            sortChooseButtonMin.style.backgroundColor = '#ffff';\n            sortChooseButtonMin.style.color = '#000';\n            sortChooseButtonMax.style.backgroundColor = 'transparent';\n            sortChooseButtonMax.style.color = '#fff';\n        }\n\n        function sortList(sortType) { //sortType это 'data-price'\n            for (let i = 0; i < newItemsClock.children.length - 1; i++) { // перебираем все наши карточки, где i - это наша первая карточка\n                for (let j = i; j < newItemsClock.children.length; j++) { // j - это карточка, которая идет следом за первой карточкой. Это делается для того, чтоб сделать сравнение цены между этими карточками, которая записана в атрибут 'data-price'\n                    if (+newItemsClock.children[i].getAttribute(sortType) > +newItemsClock.children[j].getAttribute(sortType)) { // сравниваем наши цены. знак \"+\" ставим потому, что изначально мы получаем цену в виде строки и нам ее надо перевести в число.\n                        let replacedNode = newItemsClock.replaceChild(newItemsClock.children[j], newItemsClock.children[i]); //метод .replaceChild() объекта newItemsClock позволяет заменить один дочерний узел указанного узла другим, т.е. newItemsClock.children[j] заменить вместо (вставить на его место) newItemsClock.children[i], а в  переменную replacedNode мы записываем карточку, которую мы удалили (на чье место подставили newItemsClock.children[j]).\n                        insertAfter(replacedNode, newItemsClock.children[i]); //создаем функцию, которая будет добавлять элемент в  список дочерних элементов родителя.\n                    }\n                }\n            }\n        }\n\n\n        // -------------------сортировка по убыванию----------------------\n        sortChooseButtonMax.onclick = function () {\n            sortListDesc('data-price');\n            // sortChooseButtonMin.style.backgroundColor = '#ffff';\n            sortChooseButtonMax.style.backgroundColor = '#ffff';\n            sortChooseButtonMax.style.color = '#000';\n            sortChooseButtonMin.style.backgroundColor = 'transparent';\n            sortChooseButtonMin.style.color = '#fff';\n        }\n\n        function sortListDesc(sortType) {\n            for (let i = 0; i < newItemsClock.children.length - 1; i++) {\n                for (let j = i; j < newItemsClock.children.length; j++) {\n                    if (+newItemsClock.children[i].getAttribute(sortType) < +newItemsClock.children[j].getAttribute(sortType)) {\n                        let replacedNode = newItemsClock.replaceChild(newItemsClock.children[j], newItemsClock.children[i]);\n                        insertAfter(replacedNode, newItemsClock.children[i]);\n                    }\n                }\n            }\n        }\n\n        // функция, которая  добавляет элемент в  список дочерних элементов родителя после указанного элемента.\n        // Метод insertBefore() добавляет узел (elem) в список дочерних элементов указанного родителя перед указанным узлом (refElem). \n        // parentNode родитель текущего элемента\n        function insertAfter(elem, refElem) {\n            return refElem.parentNode.insertBefore(elem, refElem.nextSibling);\n        }\n\n    }\n    fetchData()\n};"]}